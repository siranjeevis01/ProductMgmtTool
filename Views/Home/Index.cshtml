@model ProductMgmt.Controllers.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<h2 class="mb-4 text-dark fw-bold">Dashboard</h2>

<div class="row g-4">
    <!-- Total Categories Card -->
    <div class="col-md-4">
        <div class="card shadow-lg border-0 h-100 text-center hover-shadow" style="background: linear-gradient(135deg, #1e1e2f, #3a3a5c); color: #fff; transition: transform 0.3s, box-shadow 0.3s;">
            <div class="card-body d-flex flex-column justify-content-center">
                <h5 class="card-title text-warning">Total Categories</h5>
                <p class="display-4 fw-bold">@Model.TotalCategories</p>
                <a href="/Category" class="btn btn-outline-light w-100 mt-3">View Categories</a>
            </div>
        </div>
    </div>

    <!-- Total Products Card -->
    <div class="col-md-4">
        <div class="card shadow-lg border-0 h-100 text-center hover-shadow" style="background: linear-gradient(135deg, #2f2f3f, #5c5c7d); color: #fff; transition: transform 0.3s, box-shadow 0.3s;">
            <div class="card-body d-flex flex-column justify-content-center">
                <h5 class="card-title text-info">Total Products</h5>
                <p class="display-4 fw-bold">@Model.TotalProducts</p>
                <a href="/Product" class="btn btn-outline-light w-100 mt-3">View Products</a>
            </div>
        </div>
    </div>

    <!-- Future Metrics Card Example -->
    <div class="col-md-4">
        <div class="card shadow-lg border-0 h-100 text-center hover-shadow" style="background: linear-gradient(135deg, #3a1e5c, #7a4cc3); color: #fff; transition: transform 0.3s, box-shadow 0.3s;">
            <div class="card-body d-flex flex-column justify-content-center">
                <h5 class="card-title text-light">Coming Soon</h5>
                <p class="display-4 fw-bold">--</p>
                <a href="#" class="btn btn-outline-light w-100 mt-3 disabled">More Info</a>
            </div>
        </div>
    </div>
</div>

<!-- Recent Categories -->
@if (Model.RecentCategories.Any())
{
    <h4 class="mt-5 mb-3 text-dark fw-bold">Recent Categories</h4>
    <ul class="list-group shadow-sm">
        @foreach(var cat in Model.RecentCategories)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center hover-list-item" style="transition: all 0.3s; border-radius: 10px;">
                <span class="fw-semibold">@cat.Name</span>
                <span class="badge bg-warning rounded-pill">@cat.CreatedAt.ToString("yyyy-MM-dd")</span>
            </li>
        }
    </ul>
}

<!-- Recent Products -->
@if (Model.RecentProducts.Any())
{
    <h4 class="mt-5 mb-3 text-dark fw-bold">Recent Products</h4>
    <ul class="list-group shadow-sm">
        @foreach(var prod in Model.RecentProducts)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center hover-list-item" style="transition: all 0.3s; border-radius: 10px;">
                <span class="fw-semibold">@prod.Name</span>
                <span class="badge bg-info rounded-pill">Category: @prod.Category?.Name</span>
            </li>
        }
    </ul>
}

@section Scripts {
    <style>
        /* Card hover animation */
        .hover-shadow:hover {
            transform: translateY(-8px) scale(1.03);
            box-shadow: 0 20px 40px rgba(0,0,0,0.3);
        }

        /* List item hover */
        .hover-list-item:hover {
            background: linear-gradient(90deg, #f8f9fa, #e9ecef);
            transform: translateX(5px);
        }

        /* Smooth badge animations */
        .badge {
            transition: transform 0.3s;
        }

        .badge:hover {
            transform: scale(1.1);
        }

        /* Elegant headings */
        h2, h4 {
            letter-spacing: 0.5px;
        }
    </style>
}
