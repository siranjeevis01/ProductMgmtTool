@model IEnumerable<ProductMgmt.Models.CategoryAttributeDefinition>

@{
    ViewData["Title"] = "Attributes";
}

<h2 class="mb-4 fw-bold text-dark animate__animated animate__fadeInDown">‚öôÔ∏è Attributes</h2>

<div class="row mb-3">
    <div class="col-md-6 mb-2">
        <input type="text" id="searchBox" class="form-control" placeholder="üîç Search attributes by name...">
    </div>
    <div class="col-md-6 mb-2">
        <select id="categoryFilter" class="form-select">
            <option value="">All Categories</option>
            @foreach (var cat in Model.Select(a => a.Category).Where(c => c != null).Distinct())
            {
                <option value="@cat!.Name">@cat!.Name</option>
            }
        </select>
    </div>
</div>

<div class="mb-3">
    <a class="btn btn-lg fw-bold shadow create-btn"
       asp-action="Create">
       <i class="bi bi-plus-circle me-2"></i> Create New Attribute
    </a>
</div>

<div class="card shadow-lg rounded p-4 bg-white animate__animated animate__fadeIn">
    <div class="table-responsive">
        <table class="table table-hover align-middle mb-0" id="attributesTable">
            <thead class="table-dark text-white">
                <tr>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Data Type</th>
                    <th>Required</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var a in Model)
            {
                <tr class="hover-row" data-name="@a.Name.ToLower()" data-category="@a.Category?.Name?.ToLower()">
                    <td class="fw-bold text-purple">@a.Name</td>
                    <td>@a.Category?.Name</td>
                    <td>
                        <span class="badge bg-info text-dark px-3 py-2 shadow-sm">@a.DataType</span>
                    </td>
                    <td>
                        @if (a.IsRequired)
                        {
                            <span class="badge bg-success px-3 py-2 shadow-sm">Yes</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary px-3 py-2 shadow-sm">No</span>
                        }
                    </td>
                    <td class="text-center">
                        <a class="btn btn-sm btn-info action-btn me-1 mb-1" asp-action="Details" asp-route-id="@a.Id">
                            <i class="bi bi-eye"></i>
                        </a>
                        <a class="btn btn-sm btn-warning action-btn me-1 mb-1" asp-action="Edit" asp-route-id="@a.Id">
                            <i class="bi bi-pencil-square"></i>
                        </a>
                        <form method="post" asp-action="Delete" asp-route-id="@a.Id" style="display:inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-sm btn-danger action-btn mb-1" onclick="return confirm('Are you sure you want to delete this attribute?');">
                                <i class="bi bi-trash"></i>
                            </button>
                        </form>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<style>
/* Hover effects */
.hover-row {
    transition: all 0.3s ease;
}
.hover-row:hover {
    background: linear-gradient(90deg, #f9f9f9, #ececec);
    transform: scale(1.02);
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}
.text-purple { color: #6f42c1; }

/* Action buttons */
.action-btn {
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}
.action-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(0,0,0,0.15);
}

/* Create button */
.create-btn {
    background: linear-gradient(135deg,#343a40,#6c757d);
    color:#ffd700;
    border:none;
    transition: transform 0.2s, box-shadow 0.2s;
}
.create-btn:hover {
    transform: translateY(-3px) scale(1.02);
    box-shadow: 0 8px 20px rgba(0,0,0,0.25);
}

/* Table styling */
.table { border-radius: 12px; overflow: hidden; }

/* Responsive input/select */
#searchBox, #categoryFilter { border-radius: 8px; padding: 6px 12px; margin-bottom: 0.5rem; }
</style>

<script>
    // üîç Live search + category filter
    document.getElementById("searchBox").addEventListener("keyup", filterAttributes);
    document.getElementById("categoryFilter").addEventListener("change", filterAttributes);

    function filterAttributes() {
        let search = document.getElementById("searchBox").value.toLowerCase();
        let category = document.getElementById("categoryFilter").value.toLowerCase();
        document.querySelectorAll("#attributesTable tbody tr").forEach(row => {
            let name = row.getAttribute("data-name");
            let cat = row.getAttribute("data-category");
            if ((name.includes(search) || search === "") &&
                (cat === category || category === "")) {
                row.style.display = "";
            } else {
                row.style.display = "none";
            }
        });
    }
</script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
